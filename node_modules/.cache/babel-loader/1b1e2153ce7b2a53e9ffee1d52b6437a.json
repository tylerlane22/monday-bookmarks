{"ast":null,"code":"var _jsxFileName = \"/Users/tylerlane/Documents/MondayApps/bookmarks/quickstart-react/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\"; // import concurrently from \"concurrently\";\n\nconst monday = mondaySdk();\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props); // Default state\n\n    this.state = {\n      settings: {},\n      name: \"\",\n      bookmarks: [{}]\n    };\n  }\n\n  componentDidMount() {// TODO: set up event listeners\n  }\n\n  getBookmarkList() {\n    monday.storage.instance.getItem('bookmarks').then(res => {\n      // let keys = Object.keys(res.data.value);\n      // console.log(keys);\n      console.log(res.data.value);\n      this.setState({\n        bookmarks: res.data.value\n      });\n      return;\n    });\n  }\n\n  render() {\n    const bookmarkList = this.state.bookmarks;\n    var practiceBookmarks = [{\n      \"name\": \"Google\",\n      \"url\": \"https://google.com\"\n    }, {\n      \"name\": \"Heap\",\n      \"url\": \"https://heap.io\"\n    }]; // var bookmarktext = getBookmark();\n    // if (typeof bookmarktext !== 'undefined'){\n    //   practiceBookmark = JSON.parse(bookmarktext);\n    // }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, bookmarkList.map(bookmark => /*#__PURE__*/React.createElement(Bookmark, {\n      url: bookmark.url,\n      name: bookmark.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => saveBookmark(practiceBookmarks),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, \"Save bookmark\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.getBookmarkList(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, \"Get bookmarks\"));\n  }\n\n}\n\nclass Bookmark extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bookmark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://images.g2crowd.com/uploads/product/image/large_detail/large_detail_e6baf1b33e53120e6109fb1c1c71c3f3/heap.png\",\n      alt: \"Logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, this.props.name), /*#__PURE__*/React.createElement(\"a\", {\n      href: this.props.url,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, \"Go to link\"));\n  }\n\n}\n/*\nclass CreateBookmarkForm extends React.Component {\n  //Learned here: https://reactjs.org/docs/forms.html#controlled-components\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: '',\n      bookmarkName: ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    console.log(event);\n    this.setState({\n      [url]: event.target.url,\n      [bookmarkName]: event.target.bookmarkName\n    });\n  }\n\n  handleSubmit(event) {\n    console.log('Submitted URL: ' + this.state.url);\n    console.log('Submitted Name: ' + this.state.bookmarkName);\n    console.log(this.state);\n    event.preventDefault();\n  }\n\n  render(){\n    return(\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          URL\n          <input\n            name=\"url\"\n            type=\"text\"\n            value={this.state.url}\n            onChange={this.handleChange} />\n        </label>\n        <br />\n        <label>\n          Name:\n          <input\n            name=\"bookmarkName\"\n            type=\"text\"\n            value={this.state.bookmarkName}\n            onChange={this.handleChange} />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n*/\n// ================= Backend ==================\n//https://jsdoc.app/tags-param.html <- how to document\n\n/**\n * Saves a new bookmark and adds to Monday instance.\n * @param {Object} bookmark - Bookmark to save.\n */\n\n\nfunction saveBookmark(bookmark) {\n  monday.storage.instance.setItem('bookmarks', JSON.stringify(bookmark)).then(res => {\n    console.log(res);\n  });\n}\n\nfunction getBookmark() {\n  monday.storage.instance.getItem('bookmarks').then(res => {\n    // let keys = Object.keys(res.data.value);\n    // console.log(keys);\n    console.log(res.data.value);\n    return res.data.value;\n  });\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tylerlane/Documents/MondayApps/bookmarks/quickstart-react/src/App.js"],"names":["React","mondaySdk","monday","App","Component","constructor","props","state","settings","name","bookmarks","componentDidMount","getBookmarkList","storage","instance","getItem","then","res","console","log","data","value","setState","render","bookmarkList","practiceBookmarks","map","bookmark","url","saveBookmark","Bookmark","setItem","JSON","stringify","getBookmark"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\n// import concurrently from \"concurrently\";\nconst monday = mondaySdk();\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // Default state\n    this.state = {\n      settings: {},\n      name: \"\",\n      bookmarks: [{}],\n    };\n  }\n\n  componentDidMount() {\n    // TODO: set up event listeners\n  }\n\n  getBookmarkList(){\n    monday.storage.instance.getItem('bookmarks').then(res => {\n      // let keys = Object.keys(res.data.value);\n      // console.log(keys);\n      console.log(res.data.value);\n      this.setState({bookmarks: res.data.value});\n      return;\n   })\n  }\n\n  render() {\n    const bookmarkList = this.state.bookmarks;\n    var practiceBookmarks = [{\n      \"name\": \"Google\",\n      \"url\": \"https://google.com\"\n    },{\n      \"name\": \"Heap\",\n      \"url\": \"https://heap.io\"\n    }]\n    // var bookmarktext = getBookmark();\n    // if (typeof bookmarktext !== 'undefined'){\n    //   practiceBookmark = JSON.parse(bookmarktext);\n    // }\n    return (\n      <div className=\"App\">\n        {bookmarkList.map((bookmark) =>\n        <Bookmark url={bookmark.url} name={bookmark.name} />\n      )}\n        {/* <Bookmark url={practiceBookmark.url} name={practiceBookmark.name}/> */}\n        {/* <CreateBookmarkForm /> */}\n        <button onClick={() => saveBookmark(practiceBookmarks)}>Save bookmark</button>\n        <button onClick={() => this.getBookmarkList()}>Get bookmarks</button>\n      </div>\n    );\n  }\n}\n\nclass Bookmark extends React.Component {\n\n  render(){\n    return (\n    <div className=\"bookmark\">\n      <img src=\"https://images.g2crowd.com/uploads/product/image/large_detail/large_detail_e6baf1b33e53120e6109fb1c1c71c3f3/heap.png\" alt=\"Logo\" />\n      <h2>{this.props.name}</h2>\n      <a href={this.props.url} target=\"_blank\" rel=\"noopener noreferrer\">\n          Go to link\n        </a>\n    </div>\n    );\n  }\n}\n\n/*\nclass CreateBookmarkForm extends React.Component {\n  //Learned here: https://reactjs.org/docs/forms.html#controlled-components\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: '',\n      bookmarkName: ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    console.log(event);\n    this.setState({\n      [url]: event.target.url,\n      [bookmarkName]: event.target.bookmarkName\n    });\n  }\n\n  handleSubmit(event) {\n    console.log('Submitted URL: ' + this.state.url);\n    console.log('Submitted Name: ' + this.state.bookmarkName);\n    console.log(this.state);\n    event.preventDefault();\n  }\n\n  render(){\n    return(\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          URL\n          <input\n            name=\"url\"\n            type=\"text\"\n            value={this.state.url}\n            onChange={this.handleChange} />\n        </label>\n        <br />\n        <label>\n          Name:\n          <input\n            name=\"bookmarkName\"\n            type=\"text\"\n            value={this.state.bookmarkName}\n            onChange={this.handleChange} />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n*/\n\n// ================= Backend ==================\n//https://jsdoc.app/tags-param.html <- how to document\n\n/**\n * Saves a new bookmark and adds to Monday instance.\n * @param {Object} bookmark - Bookmark to save.\n */\nfunction saveBookmark(bookmark){\n  monday.storage.instance.setItem('bookmarks', JSON.stringify(bookmark)).then(res => {\n    console.log(res);\n  })\n}\n\nfunction getBookmark(){\n  monday.storage.instance.getItem('bookmarks').then(res => {\n    // let keys = Object.keys(res.data.value);\n    // console.log(keys);\n    console.log(res.data.value);\n    \n    return res.data.value\n })\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}