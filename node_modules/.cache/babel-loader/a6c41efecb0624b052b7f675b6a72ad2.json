{"ast":null,"code":"'use strict';\n\nconst fs = require('fs');\n\nconst path = require('path');\n\nconst parseJson = require('parse-json');\n\nconst pify = require('pify');\n\nconst readFileAsync = pify(fs.readFile);\n\nmodule.exports = options => {\n  options = Object.assign({\n    cwd: process.cwd(),\n    normalize: true\n  }, options);\n  const filePath = path.resolve(options.cwd, 'package.json');\n  return readFileAsync(filePath, 'utf8').then(file => {\n    const json = parseJson(file);\n\n    if (options.normalize) {\n      require('normalize-package-data')(json);\n    }\n\n    return json;\n  });\n};\n\nmodule.exports.sync = options => {\n  options = Object.assign({\n    cwd: process.cwd(),\n    normalize: true\n  }, options);\n  const filePath = path.resolve(options.cwd, 'package.json');\n  const json = parseJson(fs.readFileSync(filePath, 'utf8'));\n\n  if (options.normalize) {\n    require('normalize-package-data')(json);\n  }\n\n  return json;\n};","map":{"version":3,"sources":["/Users/tylerlane/Documents/MondayApps/bookmarks/quickstart-react/node_modules/concurrently/node_modules/read-pkg/index.js"],"names":["fs","require","path","parseJson","pify","readFileAsync","readFile","module","exports","options","Object","assign","cwd","process","normalize","filePath","resolve","then","file","json","sync","readFileSync"],"mappings":"AAAA;;AACA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAME,SAAS,GAAGF,OAAO,CAAC,YAAD,CAAzB;;AACA,MAAMG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AAEA,MAAMI,aAAa,GAAGD,IAAI,CAACJ,EAAE,CAACM,QAAJ,CAA1B;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,OAAO,IAAI;AAC3BA,EAAAA,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc;AACvBC,IAAAA,GAAG,EAAEC,OAAO,CAACD,GAAR,EADkB;AAEvBE,IAAAA,SAAS,EAAE;AAFY,GAAd,EAGPL,OAHO,CAAV;AAKA,QAAMM,QAAQ,GAAGb,IAAI,CAACc,OAAL,CAAaP,OAAO,CAACG,GAArB,EAA0B,cAA1B,CAAjB;AAEA,SAAOP,aAAa,CAACU,QAAD,EAAW,MAAX,CAAb,CAAgCE,IAAhC,CAAqCC,IAAI,IAAI;AACnD,UAAMC,IAAI,GAAGhB,SAAS,CAACe,IAAD,CAAtB;;AAEA,QAAIT,OAAO,CAACK,SAAZ,EAAuB;AACtBb,MAAAA,OAAO,CAAC,wBAAD,CAAP,CAAkCkB,IAAlC;AACA;;AAED,WAAOA,IAAP;AACA,GARM,CAAP;AASA,CAjBD;;AAmBAZ,MAAM,CAACC,OAAP,CAAeY,IAAf,GAAsBX,OAAO,IAAI;AAChCA,EAAAA,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc;AACvBC,IAAAA,GAAG,EAAEC,OAAO,CAACD,GAAR,EADkB;AAEvBE,IAAAA,SAAS,EAAE;AAFY,GAAd,EAGPL,OAHO,CAAV;AAKA,QAAMM,QAAQ,GAAGb,IAAI,CAACc,OAAL,CAAaP,OAAO,CAACG,GAArB,EAA0B,cAA1B,CAAjB;AACA,QAAMO,IAAI,GAAGhB,SAAS,CAACH,EAAE,CAACqB,YAAH,CAAgBN,QAAhB,EAA0B,MAA1B,CAAD,CAAtB;;AAEA,MAAIN,OAAO,CAACK,SAAZ,EAAuB;AACtBb,IAAAA,OAAO,CAAC,wBAAD,CAAP,CAAkCkB,IAAlC;AACA;;AAED,SAAOA,IAAP;AACA,CAdD","sourcesContent":["'use strict';\nconst fs = require('fs');\nconst path = require('path');\nconst parseJson = require('parse-json');\nconst pify = require('pify');\n\nconst readFileAsync = pify(fs.readFile);\n\nmodule.exports = options => {\n\toptions = Object.assign({\n\t\tcwd: process.cwd(),\n\t\tnormalize: true\n\t}, options);\n\n\tconst filePath = path.resolve(options.cwd, 'package.json');\n\n\treturn readFileAsync(filePath, 'utf8').then(file => {\n\t\tconst json = parseJson(file);\n\n\t\tif (options.normalize) {\n\t\t\trequire('normalize-package-data')(json);\n\t\t}\n\n\t\treturn json;\n\t});\n};\n\nmodule.exports.sync = options => {\n\toptions = Object.assign({\n\t\tcwd: process.cwd(),\n\t\tnormalize: true\n\t}, options);\n\n\tconst filePath = path.resolve(options.cwd, 'package.json');\n\tconst json = parseJson(fs.readFileSync(filePath, 'utf8'));\n\n\tif (options.normalize) {\n\t\trequire('normalize-package-data')(json);\n\t}\n\n\treturn json;\n};\n"]},"metadata":{},"sourceType":"script"}