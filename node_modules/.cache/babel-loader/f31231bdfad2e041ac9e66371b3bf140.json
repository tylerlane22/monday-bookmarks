{"ast":null,"code":"'use strict';\n\nconst errorEx = require('error-ex');\n\nconst fallback = require('json-parse-better-errors');\n\nconst JSONError = errorEx('JSONError', {\n  fileName: errorEx.append('in %s')\n});\n\nmodule.exports = (input, reviver, filename) => {\n  if (typeof reviver === 'string') {\n    filename = reviver;\n    reviver = null;\n  }\n\n  try {\n    try {\n      return JSON.parse(input, reviver);\n    } catch (err) {\n      fallback(input, reviver);\n      throw err;\n    }\n  } catch (err) {\n    err.message = err.message.replace(/\\n/g, '');\n    const jsonErr = new JSONError(err);\n\n    if (filename) {\n      jsonErr.fileName = filename;\n    }\n\n    throw jsonErr;\n  }\n};","map":{"version":3,"sources":["/Users/tylerlane/Documents/MondayApps/bookmarks/quickstart-react/node_modules/parse-json/index.js"],"names":["errorEx","require","fallback","JSONError","fileName","append","module","exports","input","reviver","filename","JSON","parse","err","message","replace","jsonErr"],"mappings":"AAAA;;AACA,MAAMA,OAAO,GAAGC,OAAO,CAAC,UAAD,CAAvB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,0BAAD,CAAxB;;AAEA,MAAME,SAAS,GAAGH,OAAO,CAAC,WAAD,EAAc;AACtCI,EAAAA,QAAQ,EAAEJ,OAAO,CAACK,MAAR,CAAe,OAAf;AAD4B,CAAd,CAAzB;;AAIAC,MAAM,CAACC,OAAP,GAAiB,CAACC,KAAD,EAAQC,OAAR,EAAiBC,QAAjB,KAA8B;AAC9C,MAAI,OAAOD,OAAP,KAAmB,QAAvB,EAAiC;AAChCC,IAAAA,QAAQ,GAAGD,OAAX;AACAA,IAAAA,OAAO,GAAG,IAAV;AACA;;AAED,MAAI;AACH,QAAI;AACH,aAAOE,IAAI,CAACC,KAAL,CAAWJ,KAAX,EAAkBC,OAAlB,CAAP;AACA,KAFD,CAEE,OAAOI,GAAP,EAAY;AACbX,MAAAA,QAAQ,CAACM,KAAD,EAAQC,OAAR,CAAR;AAEA,YAAMI,GAAN;AACA;AACD,GARD,CAQE,OAAOA,GAAP,EAAY;AACbA,IAAAA,GAAG,CAACC,OAAJ,GAAcD,GAAG,CAACC,OAAJ,CAAYC,OAAZ,CAAoB,KAApB,EAA2B,EAA3B,CAAd;AAEA,UAAMC,OAAO,GAAG,IAAIb,SAAJ,CAAcU,GAAd,CAAhB;;AACA,QAAIH,QAAJ,EAAc;AACbM,MAAAA,OAAO,CAACZ,QAAR,GAAmBM,QAAnB;AACA;;AAED,UAAMM,OAAN;AACA;AACD,CAxBD","sourcesContent":["'use strict';\nconst errorEx = require('error-ex');\nconst fallback = require('json-parse-better-errors');\n\nconst JSONError = errorEx('JSONError', {\n\tfileName: errorEx.append('in %s')\n});\n\nmodule.exports = (input, reviver, filename) => {\n\tif (typeof reviver === 'string') {\n\t\tfilename = reviver;\n\t\treviver = null;\n\t}\n\n\ttry {\n\t\ttry {\n\t\t\treturn JSON.parse(input, reviver);\n\t\t} catch (err) {\n\t\t\tfallback(input, reviver);\n\n\t\t\tthrow err;\n\t\t}\n\t} catch (err) {\n\t\terr.message = err.message.replace(/\\n/g, '');\n\n\t\tconst jsonErr = new JSONError(err);\n\t\tif (filename) {\n\t\t\tjsonErr.fileName = filename;\n\t\t}\n\n\t\tthrow jsonErr;\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}