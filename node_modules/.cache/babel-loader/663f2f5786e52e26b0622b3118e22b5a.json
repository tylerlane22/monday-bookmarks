{"ast":null,"code":"var _jsxFileName = \"/Users/tylerlane/Documents/MondayApps/bookmarks/quickstart-react/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport { connect } from \"ngrok\"; // import concurrently from \"concurrently\";\n\nconst monday = mondaySdk();\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props); // Default state\n\n    this.state = {\n      settings: {},\n      name: \"\",\n      bookmarks: [{}],\n      editable: false,\n      adding: false,\n      newBookmarkName: '',\n      newBookmarkSubtitle: '',\n      newBookmarkURL: ''\n    }; //bind functions\n\n    this.deleteBookmark = this.deleteBookmark.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleInputSubmit = this.handleInputSubmit.bind(this); //load saved bookmarks on page load\n\n    this.getBookmarkList();\n  }\n\n  componentDidMount() {// TODO: set up event listeners\n  }\n\n  getBookmarkList() {\n    monday.storage.instance.getItem('bookmarks').then(res => {\n      // let keys = Object.keys(res.data.value);\n      // console.log(keys);\n      console.log(res.data.value);\n      var returnedValue = JSON.parse(res.data.value);\n\n      if (isEmpty(returnedValue)) {\n        this.setState({\n          bookmarks: [{}]\n        });\n        return;\n      } else {\n        this.setState({\n          bookmarks: returnedValue\n        });\n      }\n    });\n  }\n\n  addNewBookmark() {\n    this.setState({\n      adding: true\n    });\n  }\n\n  editBookmarks() {\n    this.setState({\n      editable: true\n    });\n  }\n\n  viewBookmarks() {\n    this.setState({\n      editable: false\n    });\n    this.setState({\n      adding: false\n    });\n  }\n  /**\n   * Deletes a single bookmark\n   * @param {String} bookmarkID - Bookmark to delete.\n   */\n\n\n  deleteBookmark(key) {\n    console.log('trying to delete: ' + key);\n    return Promise.resolve(monday.storage.instance.getItem('bookmarks').then(res => {\n      let currentBookmarks = [{}];\n      currentBookmarks = JSON.parse(res.data.value);\n\n      if (isEmpty(currentBookmarks)) {\n        // this.setState({bookmarks: [{}]});\n        this.getBookmarkList();\n        return;\n      } else {\n        var newBookmarks = currentBookmarks.filter(bookmark => bookmark.key !== key);\n        saveBookmarks(newBookmarks).then(res => {\n          this.getBookmarkList();\n          return;\n        });\n      }\n    }));\n  }\n\n  handleInputChange() {}\n\n  handleInputSubmit() {}\n\n  render() {\n    const bookmarkList = this.state.bookmarks;\n    var practiceBookmarks = [{\n      \"key\": \"1\",\n      \"name\": \"ESPN\",\n      \"subtitle\": \"Scores from the last 10 games.\",\n      \"url\": \"https://espn.com\",\n      \"favicon\": \"https://espn.com/favicon.ico\"\n    }, {\n      \"key\": \"2\",\n      \"name\": \"Heap\",\n      \"subtitle\": \"Latest testing data for entire period.\",\n      \"url\": \"https://heap.io\",\n      \"favicon\": \"https://heap.io/favicon.ico\"\n    }];\n    var pracAddSingleBookmark = {\n      // \"key\": \"2\",\n      \"name\": \"Google\",\n      \"subtitle\": \"Needs some more info, look here\",\n      \"url\": \"https://google.com\",\n      \"favicon\": \"https://google.com/favicon.ico\"\n    }; // if (this.state.editable){\n    //   return (\n    //   <div className=\"App\">\n    //       {bookmarkList.map((bookmark) =>\n    //       <EditableBookmark \n    //         key={bookmark.key} \n    //         id={bookmark.key} \n    //         url={bookmark.url} \n    //         name={bookmark.name} \n    //         favicon={bookmark.favicon} \n    //         subtitle={bookmark.subtitle}\n    //         refreshBookmarks={this.getBookmarkList}\n    //         deleteBookmark={this.deleteBookmark}\n    //         />\n    //       )}\n    //       {/* <CreateBookmarkForm /> */}\n    //       <button onClick={() => addBookmark(pracAddSingleBookmark)}>Add</button>\n    //       <button onClick={() => this.getBookmarkList()}>Refresh</button> \n    //       {/* <button onClick={() => deleteAllBookmarks()}>Clear All</button> */}\n    //       <button onClick={() => this.viewBookmarks()}>Save</button>\n    //       {/* <button onClick={() => getFaviconURL('https://stackoverflow.com/questions/8498592/extract-hostname-name-from-string')}>get favicon url</button> */}\n    //     </div>\n    //   );\n    // } \n\n    if (this.state.adding) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        name: \"newBookmarkName\",\n        class: \"new-bookmark-input\",\n        placeholder: \"New Bookmark Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"newBookmarkSubtitle\",\n        class: \"new-bookmark-input\",\n        placeholder: \"New Bookmark Subtitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"newBookmarkURL\",\n        class: \"new-bookmark-input\",\n        placeholder: \"New Bookmark URL\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.viewBookmarks(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }\n      }, \"Save\")));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }\n      }, bookmarkList.map(bookmark => /*#__PURE__*/React.createElement(Bookmark, {\n        key: bookmark.key,\n        url: bookmark.url,\n        name: bookmark.name,\n        favicon: bookmark.favicon,\n        subtitle: bookmark.subtitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => addBookmark(pracAddSingleBookmark),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }\n      }, \"Add\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.addNewBookmark(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }\n      }, \"Add New\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.editBookmarks(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }\n      }, \"Edit\"));\n    }\n  }\n\n}\n\nclass Bookmark extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = () => {\n      console.log('Clicked'); // window.open(\"https://www.w3schools.com\", '_blank', 'noopener,noreferrer');\n\n      window.open(this.props.url, '_blank', 'noopener,noreferrer');\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bookmark-card-component\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bookmark-card-image\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bookmark-img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"bookmark-photo\",\n      src: this.props.favicon,\n      alt: \"Logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bookmark-card-container\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bookmark-card-inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bookmark-card-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bookmark-card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }\n    }, this.props.name), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bookmark-card-subtitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"multiline-ellipsis-component\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 15\n      }\n    }, this.props.subtitle))))));\n  }\n\n}\n\nclass EditableBookmark extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClickDelete = this.handleClickDelete.bind(this);\n  }\n\n  handleClickDelete(e) {\n    //Delete bookmark\n    console.log('deleting: ' + this.props.id);\n    this.props.deleteBookmark(this.props.id);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bookmark-card-component\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bookmark-remove editable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"danger-button\",\n      onClick: this.handleClickDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }\n    }, \"Remove\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bookmark-card-container editable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bookmark-card-inner editable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bookmark-card-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bookmark-card-title editable-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bookmark-card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 15\n      }\n    }, this.props.name)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bookmark-card-subtitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"multiline-ellipsis-component\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 15\n      }\n    }, this.props.subtitle)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bookmark-card-subtitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"multiline-ellipsis-component\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 15\n      }\n    }, this.props.url))))));\n  }\n\n}\n\nclass NewBookmark extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bookmark-card-component\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bookmark-card-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bookmark-card-inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bookmark-card-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bookmark-card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 13\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bookmark-card-subtitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"multiline-ellipsis-component\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 15\n      }\n    }, \"Subtitle\"))))));\n  }\n\n}\n/*\nclass CreateBookmarkForm extends React.Component {\n  //Learned here: https://reactjs.org/docs/forms.html#controlled-components\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: '',\n      bookmarkName: ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    console.log(event);\n    this.setState({\n      [url]: event.target.url,\n      [bookmarkName]: event.target.bookmarkName\n    });\n  }\n\n  handleSubmit(event) {\n    console.log('Submitted URL: ' + this.state.url);\n    console.log('Submitted Name: ' + this.state.bookmarkName);\n    console.log(this.state);\n    event.preventDefault();\n  }\n\n  render(){\n    return(\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          URL\n          <input\n            name=\"url\"\n            type=\"text\"\n            value={this.state.url}\n            onChange={this.handleChange} />\n        </label>\n        <br />\n        <label>\n          Name:\n          <input\n            name=\"bookmarkName\"\n            type=\"text\"\n            value={this.state.bookmarkName}\n            onChange={this.handleChange} />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n*/\n// ================= Backend ==================\n//https://jsdoc.app/tags-param.html <- how to document\n\n/**\n * Saves bookmark(s) to Monday instance.\n * @param {Object} bookmarkList - Bookmarks to save.\n */\n\n\nfunction saveBookmarks(bookmarkList) {\n  return Promise.resolve(monday.storage.instance.setItem('bookmarks', JSON.stringify(bookmarkList)).then(res => {\n    console.log(res);\n  }));\n}\n/**\n * Adds a new bookmark to Monday instance.\n * @param {Object} bookmark - Bookmark to add.\n */\n\n\nfunction addBookmark(bookmark) {\n  var newKey = new Date().getTime().toString() + bookmark.name;\n  monday.storage.instance.getItem('bookmarks').then(res => {\n    // let keys = Object.keys(res.data.value);\n    // console.log(keys);\n    // console.log(res.data.value);\n    let currentBookmarks = [{}];\n    currentBookmarks = JSON.parse(res.data.value);\n\n    if (isEmpty(currentBookmarks)) {\n      var newBookmark = [{\n        \"key\": newKey,\n        \"name\": bookmark.name,\n        \"subtitle\": bookmark.subtitle,\n        \"url\": bookmark.url,\n        \"favicon\": bookmark.favicon\n      }];\n      saveBookmarks(newBookmark);\n    } else {\n      var newBookmark = {\n        \"key\": newKey,\n        \"name\": bookmark.name,\n        \"subtitle\": bookmark.subtitle,\n        \"url\": bookmark.url,\n        \"favicon\": bookmark.favicon\n      };\n      currentBookmarks.push(newBookmark);\n      saveBookmarks(currentBookmarks);\n    } // this.setState({bookmarks: newList});\n    // return; \n\n  });\n}\n/**\n * Deletes all bookmarks created\n *\n */\n\n\nfunction deleteAllBookmarks() {\n  monday.storage.instance.setItem('bookmarks', '{}').then(res => {\n    console.log(res);\n  });\n}\n/**\n * Checks if an object is empty\n * @param {Object} obj \n */\n\n\nfunction isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\n/**\n * Get standard favicon.ico url based off any link\n * @param {string} url \n */\n\n\nfunction getFaviconURL(url) {\n  var favURL;\n  var a = document.createElement('a');\n  a.href = url;\n  favURL = 'https://' + a.hostname + '/favicon.ico';\n  console.log(favURL);\n  return favURL;\n}\n/*\n**** MOVED THIS FUNCTION INSIDE APP COMPONENT SO IT CAN SAVE TO STATE ****\nfunction getBookmark(){\n  monday.storage.instance.getItem('bookmarks').then(res => {\n    // let keys = Object.keys(res.data.value);\n    // console.log(keys);\n    console.log(res.data.value);\n    return res.data.value\n })\n}\n*/\n\n\nexport default App;","map":{"version":3,"sources":["/Users/tylerlane/Documents/MondayApps/bookmarks/quickstart-react/src/App.js"],"names":["React","mondaySdk","connect","monday","App","Component","constructor","props","state","settings","name","bookmarks","editable","adding","newBookmarkName","newBookmarkSubtitle","newBookmarkURL","deleteBookmark","bind","handleInputChange","handleInputSubmit","getBookmarkList","componentDidMount","storage","instance","getItem","then","res","console","log","data","value","returnedValue","JSON","parse","isEmpty","setState","addNewBookmark","editBookmarks","viewBookmarks","key","Promise","resolve","currentBookmarks","newBookmarks","filter","bookmark","saveBookmarks","render","bookmarkList","practiceBookmarks","pracAddSingleBookmark","map","url","favicon","subtitle","addBookmark","Bookmark","handleClick","window","open","EditableBookmark","handleClickDelete","e","id","NewBookmark","setItem","stringify","newKey","Date","getTime","toString","newBookmark","push","deleteAllBookmarks","obj","Object","keys","length","getFaviconURL","favURL","a","document","createElement","href","hostname"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport { connect } from \"ngrok\";\n// import concurrently from \"concurrently\";\nconst monday = mondaySdk();\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // Default state\n    this.state = {\n      settings: {},\n      name: \"\",\n      bookmarks: [{}],\n      editable: false,\n      adding: false,\n      newBookmarkName: '',\n      newBookmarkSubtitle: '',\n      newBookmarkURL: '',\n    };\n\n    //bind functions\n    this.deleteBookmark = this.deleteBookmark.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleInputSubmit = this.handleInputSubmit.bind(this);\n\n    //load saved bookmarks on page load\n    this.getBookmarkList();\n  }\n\n  componentDidMount() {\n    // TODO: set up event listeners\n  }\n\n  getBookmarkList(){\n    monday.storage.instance.getItem('bookmarks').then(res => {\n      // let keys = Object.keys(res.data.value);\n      // console.log(keys);\n      console.log(res.data.value);\n      var returnedValue = JSON.parse(res.data.value);\n      if(isEmpty(returnedValue)){\n        this.setState({bookmarks: [{}]});\n        return;\n      } else {\n        this.setState({bookmarks: returnedValue});\n      }\n   });\n\n  }\n\n  addNewBookmark(){\n    this.setState({adding: true});\n  }\n\n  editBookmarks(){\n     this.setState({editable: true});\n  }\n\n  viewBookmarks(){\n    this.setState({editable: false});\n    this.setState({adding: false});\n }\n\n  /**\n   * Deletes a single bookmark\n   * @param {String} bookmarkID - Bookmark to delete.\n   */\n  deleteBookmark(key){\n\n    console.log('trying to delete: ' + key);  \n    \n    return Promise.resolve(monday.storage.instance.getItem('bookmarks').then(res => {\n      let currentBookmarks = [{}];\n      currentBookmarks = JSON.parse(res.data.value);\n\n      if(isEmpty(currentBookmarks)){\n        // this.setState({bookmarks: [{}]});\n        this.getBookmarkList();\n        return;\n      } else {\n        var newBookmarks = currentBookmarks.filter(bookmark => bookmark.key !== key);\n        saveBookmarks(newBookmarks).then(res => {\n          this.getBookmarkList();\n          return;\n        });\n      }\n    }));\n  \n  }\n\n  handleInputChange(){\n\n  }\n\n  handleInputSubmit(){\n\n  }\n\n  render() {\n    const bookmarkList = this.state.bookmarks;\n    \n    var practiceBookmarks = [{\n      \"key\": \"1\",\n      \"name\": \"ESPN\",\n      \"subtitle\": \"Scores from the last 10 games.\",\n      \"url\": \"https://espn.com\",\n      \"favicon\": \"https://espn.com/favicon.ico\"\n    },{\n      \"key\": \"2\",\n      \"name\": \"Heap\",\n      \"subtitle\": \"Latest testing data for entire period.\",\n      \"url\": \"https://heap.io\",\n      \"favicon\": \"https://heap.io/favicon.ico\" \n    }]\n    var pracAddSingleBookmark = {\n      // \"key\": \"2\",\n      \"name\": \"Google\",\n      \"subtitle\": \"Needs some more info, look here\",\n      \"url\": \"https://google.com\",\n      \"favicon\": \"https://google.com/favicon.ico\" \n    }\n\n    // if (this.state.editable){\n    //   return (\n    //   <div className=\"App\">\n\n    //       {bookmarkList.map((bookmark) =>\n    //       <EditableBookmark \n    //         key={bookmark.key} \n    //         id={bookmark.key} \n    //         url={bookmark.url} \n    //         name={bookmark.name} \n    //         favicon={bookmark.favicon} \n    //         subtitle={bookmark.subtitle}\n    //         refreshBookmarks={this.getBookmarkList}\n    //         deleteBookmark={this.deleteBookmark}\n    //         />\n    //       )}\n\n  \n    //       {/* <CreateBookmarkForm /> */}\n    //       <button onClick={() => addBookmark(pracAddSingleBookmark)}>Add</button>\n    //       <button onClick={() => this.getBookmarkList()}>Refresh</button> \n    //       {/* <button onClick={() => deleteAllBookmarks()}>Clear All</button> */}\n    //       <button onClick={() => this.viewBookmarks()}>Save</button>\n    //       {/* <button onClick={() => getFaviconURL('https://stackoverflow.com/questions/8498592/extract-hostname-name-from-string')}>get favicon url</button> */}\n    //     </div>\n    //   );\n    // } \n\n    if (this.state.adding) {\n      return (\n        <div className=\"App\">\n          <form>\n            <input \n              name=\"newBookmarkName\" \n              class=\"new-bookmark-input\" \n              placeholder=\"New Bookmark Name\"></input>\n            <input \n              name=\"newBookmarkSubtitle\" \n              class=\"new-bookmark-input\" \n              placeholder=\"New Bookmark Subtitle\"></input>\n            <input \n              name=\"newBookmarkURL\" \n              class=\"new-bookmark-input\" \n              placeholder=\"New Bookmark URL\"></input>\n            <button onClick={() => this.viewBookmarks()}>Save</button>\n          </form>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n\n          {bookmarkList.map((bookmark) =>\n          <Bookmark key={bookmark.key} url={bookmark.url} name={bookmark.name} favicon={bookmark.favicon} subtitle={bookmark.subtitle}/>\n          )}\n          \n  \n          {/* <CreateBookmarkForm /> */}\n          {/* <button onClick={() => saveBookmarks(practiceBookmarks)}>Set 2</button> */}\n          <button onClick={() => addBookmark(pracAddSingleBookmark)}>Add</button>\n          {/* <button onClick={() => this.getBookmarkList()}>Refresh</button>  */}\n          {/* <button onClick={() => deleteAllBookmarks()}>Clear All</button> */}\n          <button onClick={() => this.addNewBookmark()}>Add New</button>\n          <button onClick={() => this.editBookmarks()}>Edit</button>\n        </div>\n      );\n    }\n  }\n}\n\nclass Bookmark extends React.Component {\n\n  handleClick = () => {\n    console.log('Clicked');\n    // window.open(\"https://www.w3schools.com\", '_blank', 'noopener,noreferrer');\n    window.open(this.props.url, '_blank', 'noopener,noreferrer');\n  }\n\n  render(){\n    return (\n    <div className=\"bookmark-card-component\" >\n      <div className=\"bookmark-card-image\" onClick={this.handleClick}>\n        <div className=\"bookmark-img\">\n          <img className=\"bookmark-photo\" src={this.props.favicon} alt=\"Logo\" />\n        </div>\n      </div>\n      <div className=\"bookmark-card-container\" onClick={this.handleClick}>\n        <div className=\"bookmark-card-inner\">\n          <div className=\"bookmark-card-content\">\n            <div className=\"bookmark-card-title\">{this.props.name}</div>\n            <div className=\"bookmark-card-subtitle\">\n              <div className=\"multiline-ellipsis-component\">{this.props.subtitle}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    );\n  }\n}\n\nclass EditableBookmark extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.handleClickDelete = this.handleClickDelete.bind(this);\n  }\n\n  handleClickDelete(e){\n    //Delete bookmark\n    console.log('deleting: ' + this.props.id);\n    this.props.deleteBookmark(this.props.id);\n  }\n\n  render(){\n    return (\n    <div className=\"bookmark-card-component\" >\n      <div className=\"bookmark-remove editable\">\n          <button className=\"danger-button\" onClick={this.handleClickDelete}>Remove</button>\n      </div>\n      <div className=\"bookmark-card-container editable\">\n        <div className=\"bookmark-card-inner editable\">\n          <div className=\"bookmark-card-content\">\n            <div className=\"bookmark-card-title editable-text\">\n              <div className=\"bookmark-card-title\">{this.props.name}</div>\n            </div>\n            <div className=\"bookmark-card-subtitle\">\n              <div className=\"multiline-ellipsis-component\">{this.props.subtitle}</div>\n            </div>\n            <div className=\"bookmark-card-subtitle\">\n              <div className=\"multiline-ellipsis-component\">{this.props.url}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    );\n  }\n}\n\nclass NewBookmark extends React.Component {\n\n  render(){\n    return (\n      <div className=\"bookmark-card-component\" >\n      {/* <div className=\"bookmark-card-image\">\n        <div className=\"bookmark-img\">\n          <img className=\"bookmark-photo\" src={this.props.favicon} alt=\"Logo\" />\n        </div>\n      </div> */}\n      <div className=\"bookmark-card-container\">\n        <div className=\"bookmark-card-inner\">\n          <div className=\"bookmark-card-content\">\n            <div className=\"bookmark-card-title\">Name</div>\n            <div className=\"bookmark-card-subtitle\">\n              <div className=\"multiline-ellipsis-component\">Subtitle</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    )\n  }\n\n}\n\n\n/*\nclass CreateBookmarkForm extends React.Component {\n  //Learned here: https://reactjs.org/docs/forms.html#controlled-components\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: '',\n      bookmarkName: ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    console.log(event);\n    this.setState({\n      [url]: event.target.url,\n      [bookmarkName]: event.target.bookmarkName\n    });\n  }\n\n  handleSubmit(event) {\n    console.log('Submitted URL: ' + this.state.url);\n    console.log('Submitted Name: ' + this.state.bookmarkName);\n    console.log(this.state);\n    event.preventDefault();\n  }\n\n  render(){\n    return(\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          URL\n          <input\n            name=\"url\"\n            type=\"text\"\n            value={this.state.url}\n            onChange={this.handleChange} />\n        </label>\n        <br />\n        <label>\n          Name:\n          <input\n            name=\"bookmarkName\"\n            type=\"text\"\n            value={this.state.bookmarkName}\n            onChange={this.handleChange} />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n*/\n\n// ================= Backend ==================\n//https://jsdoc.app/tags-param.html <- how to document\n\n/**\n * Saves bookmark(s) to Monday instance.\n * @param {Object} bookmarkList - Bookmarks to save.\n */\nfunction saveBookmarks(bookmarkList){\n  return Promise.resolve(monday.storage.instance.setItem('bookmarks', JSON.stringify(bookmarkList)).then(res => {\n    console.log(res);\n  }))\n}\n\n/**\n * Adds a new bookmark to Monday instance.\n * @param {Object} bookmark - Bookmark to add.\n */\nfunction addBookmark(bookmark){\n  var newKey = new Date().getTime().toString() + bookmark.name;\n\n\n\n  monday.storage.instance.getItem('bookmarks').then(res => {\n    // let keys = Object.keys(res.data.value);\n    // console.log(keys);\n    // console.log(res.data.value);\n\n    let currentBookmarks = [{}];\n    currentBookmarks = JSON.parse(res.data.value);\n    \n\n    if(isEmpty(currentBookmarks)){\n      var newBookmark = [{\n        \"key\": newKey,\n        \"name\": bookmark.name,\n        \"subtitle\": bookmark.subtitle,\n        \"url\": bookmark.url,\n        \"favicon\": bookmark.favicon\n      }]\n      saveBookmarks(newBookmark);\n    } else {\n      var newBookmark = {\n        \"key\": newKey,\n        \"name\": bookmark.name,\n        \"subtitle\": bookmark.subtitle,\n        \"url\": bookmark.url,\n        \"favicon\": bookmark.favicon\n      }\n      currentBookmarks.push(newBookmark);\n      saveBookmarks(currentBookmarks);\n    }\n    // this.setState({bookmarks: newList});\n    // return; \n })\n}\n\n/**\n * Deletes all bookmarks created\n *\n */\nfunction deleteAllBookmarks(){\n  monday.storage.instance.setItem('bookmarks', '{}').then(res => {\n    console.log(res);\n  });\n}\n\n\n\n\n\n/**\n * Checks if an object is empty\n * @param {Object} obj \n */\nfunction isEmpty(obj){\n  return Object.keys(obj).length === 0;\n}\n\n\n/**\n * Get standard favicon.ico url based off any link\n * @param {string} url \n */\nfunction getFaviconURL(url){\n  var favURL;\n  var a = document.createElement('a');\n  a.href = url;\n  favURL = 'https://' + a.hostname + '/favicon.ico';\n  console.log(favURL);\n  return favURL;\n}\n\n\n\n/*\n**** MOVED THIS FUNCTION INSIDE APP COMPONENT SO IT CAN SAVE TO STATE ****\nfunction getBookmark(){\n  monday.storage.instance.getItem('bookmarks').then(res => {\n    // let keys = Object.keys(res.data.value);\n    // console.log(keys);\n    console.log(res.data.value);\n    return res.data.value\n })\n}\n*/\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}