{"ast":null,"code":"const {\n  map\n} = require('rxjs/operators');\n\nmodule.exports = class KillOnSignal {\n  constructor({\n    process\n  }) {\n    this.process = process;\n  }\n\n  handle(commands) {\n    let caughtSignal;\n    ['SIGINT', 'SIGTERM', 'SIGHUP'].forEach(signal => {\n      this.process.on(signal, () => {\n        caughtSignal = signal;\n        commands.forEach(command => command.kill(signal));\n      });\n    });\n    return commands.map(command => {\n      const closeStream = command.close.pipe(map(value => {\n        return caughtSignal === 'SIGINT' ? 0 : value;\n      }));\n      return new Proxy(command, {\n        get(target, prop) {\n          return prop === 'close' ? closeStream : target[prop];\n        }\n\n      });\n    });\n  }\n\n};","map":{"version":3,"sources":["/Users/tylerlane/Documents/MondayApps/bookmarks/quickstart-react/node_modules/concurrently/src/flow-control/kill-on-signal.js"],"names":["map","require","module","exports","KillOnSignal","constructor","process","handle","commands","caughtSignal","forEach","signal","on","command","kill","closeStream","close","pipe","value","Proxy","get","target","prop"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAUC,OAAO,CAAC,gBAAD,CAAvB;;AAGAC,MAAM,CAACC,OAAP,GAAiB,MAAMC,YAAN,CAAmB;AAChCC,EAAAA,WAAW,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAc;AACrB,SAAKA,OAAL,GAAeA,OAAf;AACH;;AAEDC,EAAAA,MAAM,CAACC,QAAD,EAAW;AACb,QAAIC,YAAJ;AACA,KAAC,QAAD,EAAW,SAAX,EAAsB,QAAtB,EAAgCC,OAAhC,CAAwCC,MAAM,IAAI;AAC9C,WAAKL,OAAL,CAAaM,EAAb,CAAgBD,MAAhB,EAAwB,MAAM;AAC1BF,QAAAA,YAAY,GAAGE,MAAf;AACAH,QAAAA,QAAQ,CAACE,OAAT,CAAiBG,OAAO,IAAIA,OAAO,CAACC,IAAR,CAAaH,MAAb,CAA5B;AACH,OAHD;AAIH,KALD;AAOA,WAAOH,QAAQ,CAACR,GAAT,CAAaa,OAAO,IAAI;AAC3B,YAAME,WAAW,GAAGF,OAAO,CAACG,KAAR,CAAcC,IAAd,CAAmBjB,GAAG,CAACkB,KAAK,IAAI;AAChD,eAAOT,YAAY,KAAK,QAAjB,GAA4B,CAA5B,GAAgCS,KAAvC;AACH,OAFyC,CAAtB,CAApB;AAGA,aAAO,IAAIC,KAAJ,CAAUN,OAAV,EAAmB;AACtBO,QAAAA,GAAG,CAACC,MAAD,EAASC,IAAT,EAAe;AACd,iBAAOA,IAAI,KAAK,OAAT,GAAmBP,WAAnB,GAAiCM,MAAM,CAACC,IAAD,CAA9C;AACH;;AAHqB,OAAnB,CAAP;AAKH,KATM,CAAP;AAUH;;AAxB+B,CAApC","sourcesContent":["const { map } = require('rxjs/operators');\n\n\nmodule.exports = class KillOnSignal {\n    constructor({ process }) {\n        this.process = process;\n    }\n\n    handle(commands) {\n        let caughtSignal;\n        ['SIGINT', 'SIGTERM', 'SIGHUP'].forEach(signal => {\n            this.process.on(signal, () => {\n                caughtSignal = signal;\n                commands.forEach(command => command.kill(signal));\n            });\n        });\n\n        return commands.map(command => {\n            const closeStream = command.close.pipe(map(value => {\n                return caughtSignal === 'SIGINT' ? 0 : value;\n            }));\n            return new Proxy(command, {\n                get(target, prop) {\n                    return prop === 'close' ? closeStream : target[prop];\n                }\n            });\n        });\n    }\n};\n"]},"metadata":{},"sourceType":"script"}